module TB ();

    parameter MEM_DEPTH = 256;
    parameter ADDR_SIZE = 8;

    reg clk, rst_n, SS_n_tb, MOSI_tb, MISO_exp;
    wire MISO_dut;

    reg [ADDR_SIZE - 1 : 0] address;
    reg [ADDR_SIZE - 1 : 0] data;

    wrapper dut (.clk(clk), .rst_n(rst_n), .SS_n(SS_n_tb), .MISO(MISO_dut), .MOSI(MOSI_tb));
    

    initial begin
        clk = 0;
        forever begin
            #1 clk = ~clk;
        end
    end

    integer i ;

    initial begin 
        rst_n = 0 ;
        SS_n_tb = 1 ;
        MOSI_tb = 1 ;
        MISO_exp = 0 ;

        @(negedge clk) ;

    if (MISO_exp != MISO_dut) begin
        $display("error: resetting not working well ") ;
        $stop ;
    end

    address = {01010101} ;
    rst_n = 1 ;
    SS_n_tb = 0 ;

    @(negedge clk) ;

    for (i = 0; i < 3; i = i + 1) begin
        MOSI_tb = 0;
        @(negedge clk) ;
    end

    for (i = ADDR_SIZE - 1; i >= 0; i = i - 1) begin
            MOSI_tb = address[i];

            @(negedge clk);
    end

    @(negedge clk) ;
    SS_n_tb = 1 ;

    @(negedge clk) ;
    SS_n_tb = 0 ;

    @(negedge clk) ;

    data = {10101010};
    MOSI_tb = 0;

    @(negedge clk);
    MOSI_tb = 0;

    @(negedge clk);
    MOSI_tb = 1;

    @(negedge clk);

    for (i = ADDR_SIZE - 1; i >= 0; i = i - 1) begin
            MOSI_tb = data[i];

            @(negedge clk);
    end

        @(negedge clk);
        SS_n_tb = 1;

        @(negedge clk);
        SS_n_tb = 0;

        @(negedge clk);
        MOSI_tb = 1;

        @(negedge clk);
        MOSI_tb = 1;

        @(negedge clk);
        MOSI_tb = 0;

        @(negedge clk) ;

        for (i = ADDR_SIZE - 1; i >= 0; i = i - 1) begin
            MOSI_tb = address[i];

            @(negedge clk);
        end 

        @(negedge clk) ;
        SS_n_tb = 1;

        @(negedge clk);
        SS_n_tb = 0;

        for (i = 0; i < 3; i = i + 1) begin
            MOSI_tb = 1;
            @(negedge clk);
        end

        @(negedge clk ) ;

        for (i = 0; i < 8; i = i + 1) begin
            MOSI_tb = 0;
            @(negedge clk);
        end

        repeat (2) @(negedge clk);

        for ( i= ADDR_SIZE - 1 ; i>=0 ; i = i - 1 ) begin
            MISO_exp = data[i] ;
            @(negedge clk) ;
       end
    
    end
    endmodule
